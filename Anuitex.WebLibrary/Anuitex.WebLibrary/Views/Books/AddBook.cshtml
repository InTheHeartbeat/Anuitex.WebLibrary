@using System.Linq
@using Anuitex.WebLibrary.Data
@model Anuitex.WebLibrary.Models.AddBookModel

<div class="windows-container" id="add-book-container">
    <div class="windows-grid">
        <div class="window-wrapper add-book-window">
            <div class="window">
                <div class="window-header">
                    <span class="icon ic-addbook"></span>
                    <h4>Adding book form</h4>
                </div>
                <div class="window-content">
                    @using ((Model.IsEdit ? Html.BeginForm("TryEditBook", "Books") : Html.BeginForm("TryAddBook", "Books")))
                    {
                        <div class="choose-photo" id="book-photo">
                            <h5>Click for choose photo</h5>
                        </div>
                        @Html.HiddenFor(f=>Model.Id)
                        @Html.ValidationMessageFor(msg => msg.Title)
                        @Html.TextBoxFor(f => f.Title, new {@placeholder = "Title"})
                        @Html.ValidationMessageFor(msg => msg.Author)
                        @Html.TextBoxFor(f => f.Author, new {@placeholder = "Author"})
                        @Html.ValidationMessageFor(msg => msg.Genre)
                        @Html.TextBoxFor(f => f.Genre, new {@placeholder = "Genre"})
                        <br/>
                        <br/>
                        <div id="add-book-down-fields">
                            @Html.ValidationMessageFor(msg => msg.Year)
                            @Html.TextBoxFor(f => f.Year, new {@placeholder = "Year"})
                            @Html.ValidationMessageFor(msg => msg.Pages)
                            @Html.TextBoxFor(f => f.Pages, new {@placeholder = "Pages"})
                            @Html.ValidationMessageFor(msg => msg.Amount)
                            @Html.TextBoxFor(f => f.Amount, new {@placeholder = "Amount"})
                            @Html.ValidationMessageFor(msg => msg.Price)
                            @Html.TextBoxFor(f => f.Price, new {@placeholder = "Price"})
                        </div>
                        if (Model.IsEdit)
                        {
                            <input type="submit" class="btn" value="Edit">
                        }
                        else
                        {
                            <input type="submit" class="btn" value="Add">
                        }

                        @Html.ValidationSummary(true)

                        <input type="file" name="upload" id="uploadFile" style="display: none"/>
                        @Html.HiddenFor(f => f.PhotoId, new {@id = "photo-id"})
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts{
    <script type="text/javascript">
        $("#book-photo").click(
            function () {
                $("#uploadFile").trigger('click');
            });


        $(document).ready(function () {
            @{
                string path = (String.IsNullOrWhiteSpace(Model.PhotoPath) ? "/Upload/Images/no-photo.png" : Model.PhotoPath);
            }

            $('#book-photo').css('background-image', 'url(@path)').css('background-size', 'contain');

            if ($("#Year").val() == "0"){ $("#Year").val("");}
            if ($("#Pages").val() == 0){ $("#Pages").val("");}
            if ($("#Amount").val()=="0") { $("#Amount").val("") };
            if($("#Price").val()=="0"){$("#Price").val("");}

            $("#uploadFile").change(function (e) {
                e.preventDefault();
                var files = document.getElementById('uploadFile').files;
                if (files.length > 0) {
                    if (window.FormData !== undefined) {
                        var data = new FormData();
                        for (var x = 0; x < files.length; x++) {
                            data.append("file" + x, files[x]);
                        }

                        var reader = new FileReader();
                        reader.onloadend = function () {
                            $('#book-photo').css('background-image', 'url(' + reader.result + ')')
                                .css('background-size', 'contain');
                        }
                        if (files[0]) {
                            reader.readAsDataURL(files[0]);
                        }

                        $.ajax({
                            type: "POST",
                            url:
                                '@Url.RouteUrl("DefaultApi", new {httproute = "", controller = "Upload", id = "UploadPhoto"})',
                            contentType: false,
                            processData: false,
                            data: data,
                            success: function (dat) {
                                $("#photo-id").val(dat);
                            },
                            error: function (xhr, status, p3) {
                                alert(xhr.responseText);
                            }
                        });
                    } else {
                        alert("Браузер не поддерживает загрузку файлов HTML5!");
                    }
                }
            });
        });
    </script>}